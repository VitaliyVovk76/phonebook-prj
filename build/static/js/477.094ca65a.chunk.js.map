{"version":3,"file":"static/js/477.094ca65a.chunk.js","mappings":"yOACA,EAAuB,2BAAvB,EAA0D,4B,UC4E1D,EArEqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KACtB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KAEtBC,EAAe,SAAH,GAAqC,IAAD,IAA9BC,OAAUP,EAAI,EAAJA,KAAMQ,EAAK,EAALA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,MAAM,IAAIC,MAAM,oDAAD,OAAkBT,EAAI,uGAE3C,EAYMU,EAAQ,WACZT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACd,EAEA,OACE,kBAAMM,UAAWC,EAAQC,SAjBN,SAACC,GACpBA,EAAEC,iBACmB,KAAjBb,EAAMc,QAAqC,KAApBZ,EAASY,QAAiC,KAAhBhB,EAAKgB,QAI1DnB,EAASoB,EAAAA,EAAAA,SAAwB,CAAEjB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDM,MAJEQ,EAAAA,EAAAA,IAAM,iBAKV,EASmDC,aAAa,MAAK,WACjE,kBACER,UAAWC,EACXQ,KAAK,OACLpB,KAAK,OACLQ,MAAOR,EACPqB,YAAY,OACZC,SAAUhB,KAGZ,kBACEK,UAAWC,EACXQ,KAAK,QACLpB,KAAK,QACLQ,MAAON,EACPmB,YAAY,SACZC,SAAUhB,KAGZ,kBACEK,UAAWC,EACXQ,KAAK,WACLpB,KAAK,WACLQ,MAAOJ,EACPiB,YAAY,WACZC,SAAUhB,KAGZ,SAACiB,EAAA,EAAM,CAACH,KAAK,SAASI,KAAK,eAAeC,GAAG,aAGnD,C","sources":["webpack://phonebook-prj/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterPage_form__9C15T\",\"input\":\"RegisterPage_input__R4w9L\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport userOperations from \"../../redux/user/user-operations\";\r\nimport Button from \"../../components/Button\";\r\nimport s from \"./RegisterPage.module.css\";\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        throw new Error(`Тип поля name ${name} не обрабатывается`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim() === \"\" || name.trim() === \"\") {\r\n      toast(`Enter the form`);\r\n      return;\r\n    }\r\n    dispatch(userOperations.register({ name, email, password }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        placeholder=\"Name\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <input\r\n        className={s.input}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        placeholder=\"E-mail\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <input\r\n        className={s.input}\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        placeholder=\"Password\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <Button type=\"submit\" text=\"Registration\" id=\"create\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","Error","reset","className","s","onSubmit","e","preventDefault","trim","userOperations","toast","autoComplete","type","placeholder","onChange","Button","text","id"],"sourceRoot":""}