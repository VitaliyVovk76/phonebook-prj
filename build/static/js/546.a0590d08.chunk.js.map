{"version":3,"file":"static/js/546.a0590d08.chunk.js","mappings":"yOACA,EAAuB,wBAAvB,EAAuD,yB,UC+DvD,EAxDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAEtBC,EAAe,SAAH,GAAqC,IAAD,IAA9BC,OAAUC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,MAAM,IAAIC,MAAM,oDAAD,OAAkBF,EAAI,uGAE3C,EAYMG,EAAQ,WACZR,EAAS,IACTE,EAAY,GACd,EAEA,OACE,kBAAMO,SAhBa,SAACC,GACpBA,EAAEC,iBACmB,KAAjBZ,EAAMa,QAAqC,KAApBX,EAASW,QAIpChB,EAASiB,EAAAA,EAAAA,MAAqB,CAAEd,MAAAA,EAAOE,SAAAA,KACvCO,MAJEM,EAAAA,EAAAA,IAAM,iBAKV,EAQgCC,UAAWC,EAAQC,aAAa,MAAK,WACjE,kBACEF,UAAWC,EACXE,KAAK,QACLb,KAAK,QACLC,MAAOP,EACPoB,YAAY,SACZC,SAAUjB,KAGZ,kBACEY,UAAWC,EACXE,KAAK,WACLb,KAAK,WACLC,MAAOL,EACPkB,YAAY,WACZC,SAAUjB,KAGZ,SAACkB,EAAA,EAAM,CAACH,KAAK,SAASI,KAAK,SAASC,GAAG,aAG7C,C","sources":["webpack://phonebook-prj/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__zs3X1\",\"input\":\"LoginPage_input__7DAFB\"};","import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport userOperations from \"../../redux/user/user-operations\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport s from \"./LoginPage.module.css\";\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        throw new Error(`Тип поля name ${name} не обрабатывается`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      toast(`Enter the form`);\r\n      return;\r\n    }\r\n    dispatch(userOperations.logIn({ email, password }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n      <input\r\n        className={s.input}\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        placeholder=\"E-mail\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <input\r\n        className={s.input}\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        placeholder=\"Password\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <Button type=\"submit\" text=\"Log in\" id=\"create\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","Error","reset","onSubmit","e","preventDefault","trim","userOperations","toast","className","s","autoComplete","type","placeholder","onChange","Button","text","id"],"sourceRoot":""}