{"version":3,"file":"static/js/50.5278a19b.chunk.js","mappings":"iMAOMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KA2ElB,UAvEqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KACtB,GAAgCJ,EAAAA,EAAAA,UAAS,IAAG,eAArCK,EAAQ,KAAEC,EAAW,KAEtBC,EAAe,SAAH,GAAqC,IAAD,IAA9BC,OAAUP,EAAI,EAAJA,KAAMQ,EAAK,EAALA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,MAAM,IAAIC,MAAM,oDAAD,OAAkBT,EAAI,uGAE3C,EAYMU,EAAQ,WACZT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACd,EAEA,OACE,4BACE,wBAAI,kBAEJ,kBAAMM,SApBW,SAACC,GACpBA,EAAEC,iBACmB,KAAjBX,EAAMY,QAAqC,KAApBV,EAASU,QAAiC,KAAhBd,EAAKc,QAI1DjB,EAASkB,EAAAA,EAAAA,SAAwB,CAAEf,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDM,MAJEM,EAAAA,EAAAA,IAAM,iBAKV,EAYkCC,MAAO3B,EAAOC,KAAM2B,aAAa,MAAK,WAClE,mBAAOD,MAAO3B,EAAOG,MAAM,UAAC,sBAE1B,kBAAO0B,KAAK,OAAOnB,KAAK,OAAOQ,MAAOR,EAAMoB,SAAUd,QAGxD,mBAAOW,MAAO3B,EAAOG,MAAM,UAAC,kCAE1B,kBACE0B,KAAK,QACLnB,KAAK,QACLQ,MAAON,EACPkB,SAAUd,QAId,mBAAOW,MAAO3B,EAAOG,MAAM,UAAC,wCAE1B,kBACE0B,KAAK,WACLnB,KAAK,WACLQ,MAAOJ,EACPgB,SAAUd,QAId,mBAAQa,KAAK,SAAQ,SAAC,sHAI9B,C","sources":["pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import { register } from \"../redux/user/user-operations\";\r\nimport userOperations from \"../redux/user/user-operations\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        throw new Error(`Тип поля name ${name} не обрабатывается`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim() === \"\" || name.trim() === \"\") {\r\n      toast(`Enter the form`);\r\n      return;\r\n    }\r\n    dispatch(userOperations.register({ name, email, password }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>RegisterPage</h2>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Имя\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Почта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Зарегистрироваться</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","Error","reset","onSubmit","e","preventDefault","trim","userOperations","toast","style","autoComplete","type","onChange"],"sourceRoot":""}